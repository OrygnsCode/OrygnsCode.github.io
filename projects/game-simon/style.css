@import url('https://fonts.googleapis.com/css?family=Alfa+Slab+One|VT323|Oswald');

/* Basic Reset */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    -webkit-user-select: none; 
    -moz-user-select: none; 
    -ms-user-select: none; 
    -o-user-select: none;
    user-select: none;
}

html{
    background-image: url('https://github.com/Em-Ant/fcc-course/raw/master/front-end_cert/projects/advanced/04-simon-game/images/retina_wood.png');
    height: 100%; /* Ensures body min-height 100vh works as expected */
}

/* MODIFIED body for layout */
body {
    font-family: 'Arial', sans-serif; /* Fallback font */
    margin: 0;
    padding: 0; /* Let content determine padding or use padding on specific sections */
    display: flex;
    flex-direction: column;
    align-items: center; /* Horizontally center direct children like .wrap and footer */
    min-height: 100vh;   /* Body takes at least full viewport height */
    box-sizing: border-box; 
}

.inline{
    display: inline-block;
}

.push{
    position: relative;
    width:200px;
    height:200px;
    background-color : grey;
    border: 12px solid #333;
    /* Default box-sizing is content-box, so total size is 224x224 */
}

.rw{
    margin-bottom:-4px; /* Original value for border overlap */
    display: flex; /* Ensures .push items align in a row if needed by their container */
}

.b-r{ border-bottom-right-radius : 100%; }
.b-l{ border-bottom-left-radius : 100%; }
.t-l{ border-top-left-radius : 100%; }
.t-r{ border-top-right-radius : 100%; }

.wrap{ /* Styles from your provided CSS */
    width: 472px;
    height:472px;
    border-radius:100%;
    position: relative; 
    text-align: center; /* For inline-block children like .wrap-in IF it behaves as such */
    /* margin:auto; -- This will be handled by body flex if it's a direct child and body centers items */
    margin-top: 10vh; /* Adjusted from 'top: 10vh' to work better with flex flow */
    margin-bottom: 30px; /* Space before footer */
    background-color:#333;
    box-shadow: 0px 0px 12px #222;
    flex-shrink: 0; /* Prevent .wrap from shrinking if body content gets crowded */
}

.wrap-in{ /* Styles from your provided CSS */
    position: relative;
    top:12px;  /* This offset plus .push borders creates the machine's outer rim look */
    /* To center .wrap-in if it's not automatically filling .wrap (e.g. if .wrap had padding) */
    /* For this specific HTML, .wrap-in contains two .rw divs, each with two .push divs.
       Each .push is 200px content + 24px border = 224px total width/height.
       Two .push elements in a .rw will be 448px wide. Two .rw stack to 448px tall.
       So .wrap-in effectively becomes a 448x448 block.
       With .wrap at 472x472, the 12px top offset and an implicit 12px left offset (due to .wrap text-align:center and .wrap-in's content) centers the 448x448 block.
    */
    /* To be more explicit for centering the 448x448 block within the 472x472 .wrap: */
    /* This might not be needed if text-align on .wrap centers .wrap-in correctly,
       or if .wrap-in is made block and given margin:auto.
       Given the fixed sizes, top:12px and an effective left:12px (from (472-448)/2) is the goal.
       Let's ensure .wrap-in is centered if its children define its size.
    */
    display: inline-block; /* To respect text-align: center on .wrap */
    vertical-align: top; /* If needed with inline-block */

}
.center{ /* Styles from your provided CSS */
    width:220px;
    height:220px;
    position : absolute;
    border-radius:100%;
    top:50%;
    left:50%;
    margin: -122px 0 0 -122px; /* Correct for 220 + 2*12 border */
    background-color:#ECE7EE;
    border: 12px solid #333;
    z-index: 10;
    /* Added display:flex and properties for better internal centering */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
}

.brand{ font-family: 'Alfa Slab One', cursive; color : #222; font-size: 3.2em; margin-top : 35px; }
.brand .small{ font-size : 0.3em; position : relative; top : -20px; }
.count{
    font-family: 'VT323', monospace; color : #DC0D29; padding : 0px; font-size : 2em;
    width : 50px; background-color: #32050C; position:relative; border : 4px solid #222;
    border-radius : 10px; margin:auto; line-height: 1.1em;
}
.round-btn{
    width : 20px; height : 20px; position: relative; background-color : yellow; 
    border-radius : 100%; border : 4px solid #444; box-shadow : 0px 2px 3px #222;
    margin:auto; top : -5px;
}
.round-btn:active{ box-shadow : 0 1px 1px #292929; top : -4px; }
.clickable{ pointer-events : auto; cursor:pointer; }
.unclickable{ pointer-events:none; }
.led{
    width:6px; height:6px; background-color: #32050C; border-radius : 100%;
    position: absolute; left:0; right: 0; margin : auto; border: 2px solid #222;
    top: -18px;
}
.led-on{ background-color:#DC0D29; }
.led-off{ color:#430710; }
.label{ color : #222; font-family : 'Oswald',Arial,sans; font-size:0.7em; margin-top:5px; text-align:center; }
.display{ width : 60px; position:relative; text-align:center; }
.btn-box{ width : 50px; position:relative; }
.sw-slot{ 
    height:20px; width:40px; background-color : #222; position:relative;
    top:5px; border-radius:2px; cursor: pointer;
}
.switch{ 
    height:16px; width: 16px; border-radius:4px; background-color : #3193DE; 
    position:relative; border : 2px solid #333;
    left: 2px; /* Default for OFF */
    transition: left 0.2s ease-in-out;
}
.sw-on{ left:20px; }
.rw.bot{ 
    margin-top: 10px; /* Your original value */
    /* To ensure it doesn't get pushed out of .center if content is too tall */
    flex-shrink: 0; 
}
.full-red{ background-color : #FC0102; }

.red{ background-color : #9f0f17; }
.green{ background-color : #00a74a; }
.yellow{ background-color : #cca707; }
.blue{ background-color : #094a8f; }

.yellow.light{ background-color : #fed93f; }
.blue.light{ background-color : #1c8cff; }
.red.light{ background-color : #ff4c4c; }
.green.light{ background-color : #13ff7c; }

@media screen and (max-width: 500px){
    .wrap {
        top: 40px; /* From your original media query */
        transform: scale(0.6);
        transform-origin: 0 0; 
        left: 50%;
        margin-left: -142px; /* Your original centering for scaled element */
        margin-top: 0; /* Override previous margin-top for this specific case */
        margin-bottom: 20px; /* Ensure space for footer on small screens */
    }
}

/* MODIFIED FOOTER STYLING FOR POSITION AND COLOR */
footer {
    text-align: center;
    width: 100%; 
    margin-top: auto; /* This pushes the footer to the bottom of the flex body */
    padding: 20px 0;  /* Add some top/bottom padding to the footer itself */
    color: #000000;   /* Black text as requested */
    flex-shrink: 0;   /* Prevent footer from shrinking if body content is short */
}

footer a {
    color: #000000; /* Black link text */
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
    color: #333333; /* Optional: Darker grey on hover */
}
