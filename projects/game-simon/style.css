@import url('https://fonts.googleapis.com/css?family=Alfa+Slab+One|VT323|Oswald');

/* Basic Reset */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    /* Disable mouse selection */
    -webkit-user-select: none; /* Chrome/Safari */
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* IE10+ */
    /* Rules below not implemented in browsers yet */
    -o-user-select: none;
    user-select: none;
}

html{
    background-image: url('https://github.com/Em-Ant/fcc-course/raw/master/front-end_cert/projects/advanced/04-simon-game/images/retina_wood.png');
    height: 100%; /* Ensure html takes full height for body min-height */
}

body {
    font-family: 'Arial', sans-serif; /* Fallback font */
    margin: 0;
    padding: 20px; /* Overall padding for the page content */
    display: flex;
    flex-direction: column;
    align-items: center; /* Horizontally centers flex items */
    min-height: 100vh; 
    box-sizing: border-box;
}

.inline{
    display: inline-block;
}

.push{ /* These are the colored button quadrants */
    position: relative;
    width:200px;
    height:200px;
    background-color : grey; /* Default, will be overridden by color classes */
    border: 12px solid #333; /* This creates the black lines between quadrants */
    box-sizing: border-box; /* Border is included in width/height calculation */
}

.rw{ /* Row wrapper for buttons */
    margin-bottom:-4px; /* Original value to make quadrants touch by overlapping borders */
    display: flex; /* Ensures buttons in a row are side-by-side */
}

/* Quadrant Shapes */
.b-r{
    border-bottom-right-radius : 100%;
}
.b-l{
    border-bottom-left-radius : 100%;
}
.t-l{
    border-top-left-radius : 100%;
}
.t-r{
    border-top-right-radius : 100%;
}

/* Main Simon Body */
.wrap{
    width: 472px; /* (200 (button) + 12*2 (border)) * 2 = 448. 472 allows for a central "gap" */
    height:472px;
    border-radius:100%; /* Circular */
    position: relative;
    text-align: center;
    margin: auto; /* For vertical centering if body is not flex justify-content:center */
                  /* Also works with body flex align-items:center for horizontal */
    /* top:10vh; -- Removed, margin:auto with flex on body should handle centering better */
    margin-top: 5vh; /* Some space from top */
    margin-bottom: 20px; /* Space before footer */
    background-color:#333; /* This acts as the dividing lines if .push borders are part of their color */
    box-shadow: 0px 0px 12px #222;
    /* Padding can create the outer ring if .wrap-in is smaller or direct children are sized within */
    /* padding: 12px; -- The .push borders act as this now */
    /* box-sizing: border-box; -- Not needed if no padding/border on .wrap itself being sized */
}

/* Inner wrapper for the quadrants */
.wrap-in{
    position: relative;
    /* This div's top/left are relative to .wrap's content area.
       If .wrap has padding, this starts inside the padding.
       The original `top:12px;` likely intended to offset from a non-padded .wrap.
       If .push borders are 12px and are visible, this container might not need offset.
       Let's assume it's centered by .wrap's text-align:center if it's inline-block,
       or just takes up the space.
    */
    /* For the structure where .push has its own 12px border and .wrap is 472px,
       .wrap-in would contain two .rw, each .rw containing two .push.
       The total width of .push elements side-by-side including their borders would be complex.
       Let's assume the original CSS intent was that the .push borders create the gaps.
       .wrap is 472px. Each .push is 200px + 24px border = 224px. Two make 448px.
       The 472-448 = 24px is effectively the "padding" of .wrap for the .push elements to sit in.
       So .wrap-in should be 448x448 and centered.
    */
    width: 448px; /* 2 * (200px width + 2*12px border) = 448 if borders don't overlap */
                  /* Or simply, 2 * 200px (quadrant main area) + 2 * 12px (inner borders forming center cross) + 2 * 12px (outer borders becoming part of machine rim)*/
                  /* Actually, the .push border is the separator. So just 200+200 = 400px for the colored areas. */
    height: 400px;
    margin: auto; /* Center .wrap-in within .wrap */
    position:absolute; /* To overlay on .wrap properly if needed */
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
}

.center{ /* Center Console */
    width:220px;
    height:220px;
    position : absolute;
    border-radius:100%;
    top:50%;
    left:50%;
    margin: -122px 0 0 -122px; /* -(height/2 + border-width), -(width/2 + border-width) */
    background-color:#ECE7EE;
    border: 12px solid #333;
    z-index: 10; /* Ensure it's on top */
}

.brand{
    font-family: 'Alfa Slab One', cursive;
    color : #222;
    font-size: 3.2em;
    margin-top : 35px;
}

.brand .small{
    font-size : 0.3em;
    position : relative;
    top : -20px;
}

.count{
    font-family: 'VT323', monospace;
    color : #DC0D29;
    padding : 0px;
    font-size : 2em;
    width : 50px;
    background-color: #32050C;
    position:relative;
    border : 4px solid #222;
    border-radius : 10px;
    margin:auto;
    line-height: 1.1em; /* Adjusted for better vertical centering */
}

.round-btn{
    width : 20px;
    height : 20px;
    position: relative;
    background-color : yellow;
    border-radius : 100%;
    border : 4px solid #444;
    box-shadow : 0px 2px 3px #222;
    margin:auto;
    top : -5px;
}

.round-btn:active{
    box-shadow : 0 1px 1px #292929;
    top : -4px;
}

.clickable{
    pointer-events : auto;
    cursor:pointer;
}

.unclickable{
    pointer-events:none;
}

.led{
    width:6px;
    height:6px;
    background-color: #32050C;
    border-radius : 100%;
    position: absolute;
    left:0;
    right: 0;
    margin : auto;
    border: 2px solid #222;
    top: -18px;
}

.led-on{
    background-color:#DC0D29;
}

.led-off{
    color:#430710;
}

.label{
    color : #222;
    font-family : 'Oswald',Arial,sans;
    font-size:0.7em;
    margin-top:5px;
    text-align:center;
}

.display{
    width : 60px;
    position:relative;
    text-align:center;
}

.btn-box{
    width : 50px;
    position:relative;
}

.sw-slot{
    height:20px;
    width:40px;
    background-color : #222;
    position:relative;
    top:5px;
    border-radius:2px;
    cursor: pointer;
}

.switch{
    height:16px;
    width: 16px;
    border-radius:4px;
    background-color : #3193DE;
    position:relative;
    border : 2px solid #333;
    left: 2px; /* Default position */
    transition: left 0.2s ease-in-out;
}

.sw-on{
    left:20px;
}
.rw.bot{
    margin-top: 10px;
}
.full-red{ /* For Start button */
    background-color : #FC0102;
}

/* Quadrant Button Colors */
.red{
    background-color : #9f0f17;
}
.green{
    background-color : #00a74a;
}
.yellow{
    background-color : #cca707;
}
.blue{
    background-color : #094a8f;
}

/* Lit up quadrant button colors */
.yellow.light{
    background-color : #fed93f;
}
.blue.light{
    background-color : #1c8cff;
}
.red.light{
    background-color : #ff4c4c;
}
.green.light{
    background-color : #13ff7c;
}

/* Scaling for Mobile */
@media screen and (max-width: 500px){
    .wrap {
        /* top: 40px; -- Let flexbox handle vertical positioning */
        margin-top: 20px; /* Adjust if needed */
        margin-bottom: 20px; /* Adjust if needed */
        transform: scale(0.6);
        transform-origin: center center; /* Scale from center */
        /* margin-left: -142px; -- Not needed if body is flex-centering */
    }
}

/* Footer Styling */
footer {
    text-align: center;
    margin-top: auto; /* Pushes footer to the bottom of the flex container (body) */
    padding-top: 30px;    
    padding-bottom: 20px; 
    width: 100%; 
    color: #000000; /* Black text as requested */
    position: relative; /* Ensures it's in normal flow */
}

footer a {
    color: #000000; /* Black link text */
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
    color: #333333; /* Dark grey on hover */
}
