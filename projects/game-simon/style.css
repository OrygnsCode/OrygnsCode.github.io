body {
    font-family: 'Arial', 'Helvetica Neue', Helvetica, sans-serif;
    background-color: #2c3e50; 
    color: #ecf0f1; 
    margin: 0;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: calc(100vh - 40px); 
    box-sizing: border-box;
    user-select: none; 
    perspective: 1000px; /* NEW: Add perspective to the body for 3D effects */
}

.game-container {
    display: flex;
    justify-content: center;
    align-items: center;
    /* NEW: If perspective is on body, this might not need it, but can be a good spot too */
    /* perspective: 800px; */ 
}

#simon-machine {
    width: 90vmin; 
    height: 90vmin;
    max-width: 400px; /* Slightly reduced max size to compensate for tilt */
    max-height: 400px;
    background-color: #1a1a1a; 
    border-radius: 50%; 
    position: relative; 
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5), /* Enhanced shadow for 3D */
                inset 0 0 10px rgba(255, 255, 255, 0.1);
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    gap: 10px; 
    padding: 10px; 
    box-sizing: border-box;

    /* === NEW: 3D Transform for Slant === */
    transform-style: preserve-3d; /* Allow children to be transformed in 3D */
    transform: rotateX(55deg) rotateZ(0deg); /* Tilt it back. Adjust rotateZ if you want a slight turn */
    margin-top: 50px; /* May need to adjust margin to compensate for perspective shift */
    margin-bottom: 50px;
}

.simon-button {
    opacity: 0.7; 
    cursor: pointer;
    transition: opacity 0.1s ease-in-out, transform 0.05s ease-in-out, box-shadow 0.1s ease-in-out;
    box-shadow: inset 0 0 10px rgba(0,0,0,0.5); 
    /* NEW: Add a slight transform for buttons to look like they are on the slanted surface */
    /* This might need adjustment depending on the parent's tilt */
    /* transform: translateZ(1px);  */ /* Optional: slightly raise buttons */
}

.simon-button:hover {
    opacity: 0.85;
}

.simon-button.active {
    opacity: 1;
    transform: scale(0.97) translateZ(0px); /* Adjust translateZ if used, to make press look correct */
    box-shadow: inset 0 0 15px rgba(0,0,0,0.7), 0 0 20px var(--glow-color, white); 
}

#green {
    background-color: #00a74a; 
    border-top-left-radius: 100%; 
    --glow-color: #32ff7e;
}
#red {
    background-color: #9f0f17; 
    border-top-right-radius: 100%;
    --glow-color: #ff4d4d;
}
#yellow {
    background-color: #cca707; 
    border-bottom-left-radius: 100%;
    --glow-color: #fff200;
}
#blue {
    background-color: #094a8f; 
    border-bottom-right-radius: 100%;
    --glow-color: #3797ff;
}

.center-console {
    position: absolute;
    width: 40%; 
    height: 40%;
    top: 50%;
    left: 50%;
    /* MODIFIED: Adjust transform to account for parent's 3D tilt */
    /* We want the console to appear flat *on* the slanted surface. */
    /* This might need to be rotateX(-55deg) if #simon-machine has preserve-3d */
    /* Or, simpler: keep it 2D and just position it. The parent's tilt will affect it. */
    transform: translate(-50%, -50%) rotateX(0deg); /* Keep console flat relative to the already tilted machine */
    /* For it to truly sit flat on the tilted surface and look correct, it might also need its own slight counter-rotation or perspective adjustments.
       Or, if #simon-machine has transform-style: preserve-3d, its children inherit the 3D space.
       The text and buttons inside might look skewed.
       A common trick is to counter-rotate the contents of a 3D transformed parent.
       Let's try keeping it simple first. The parent's transform will apply.
    */
    background-color: #333333; 
    border-radius: 50%; 
    border: 5px solid #1a1a1a; 
    box-shadow: 0 0 10px rgba(0,0,0,0.5);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around; /* Changed to space-around for better spacing */
    padding: 5px; /* Reduced padding if elements get too cramped */
    box-sizing: border-box;
    z-index: 10; 
}

.game-title {
    font-family: 'Arial Black', Gadget, sans-serif; 
    font-size: clamp(1em, 4vmin, 1.5em); /* Adjusted size for smaller console */
    color: #dfe6e9;
    margin: 0 0 3px 0; /* Adjusted margin */
    text-transform: uppercase;
    letter-spacing: 1px;
}

.controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3px; /* Reduced gap */
}

.score-display {
    font-size: clamp(0.7em, 3vmin, 1em); /* Adjusted size */
    color: #bdc3c7; 
    background-color: #2c3e50; 
    padding: 2px 6px; /* Adjusted padding */
    border-radius: 3px;
    min-width: 50px; /* Adjusted min-width */
    text-align: center;
}

#score {
    font-weight: bold;
    color: #ffffff;
}

#start-button {
    font-size: clamp(0.7em, 3vmin, 0.9em); /* Adjusted size */
    padding: 5px 10px; /* Adjusted padding */
    background-color: #e74c3c; 
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    text-transform: uppercase;
    transition: background-color 0.2s ease;
    margin-top: 3px; /* Adjusted margin */
}

#start-button:hover {
    background-color: #c0392b; 
}

#message-display {
    margin-top: 5px; /* Adjusted margin */
    font-size: clamp(0.6em, 2.5vmin, 0.8em); /* Adjusted size */
    color: #f1c40f; 
    min-height: 1em; 
    font-weight: bold;
}
    
.hidden { 
    display: none !important;
}

footer { /* ... (same as before) ... */ }
footer a { /* ... (same as before) ... */ }
footer a:hover { /* ... (same as before) ... */ }
